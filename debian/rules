#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
#
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.
#
# Modified to make a template file for a multi-binary package with separated
# build-arch and build-indep targets  by Bill Allombert 2001

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

EPICS_HOST_ARCH:=$(shell ./startup/EpicsHostArch)

#Architecture
build: build-arch build-indep

build-arch: build-arch-stamp
build-arch-stamp: 

	# Add here commands to compile the arch part of the package.
	EPICS_HOST_ARCH=$(EPICS_HOST_ARCH) $(MAKE) USE_RPATH=NO
	touch $@

build-indep: build-indep-stamp
build-indep-stamp: 

	# Add here commands to compile the indep part of the package.
	#$(MAKE) doc
	touch $@

clean: 
	dh_testdir
	dh_testroot
	rm -f build-arch-stamp build-indep-stamp 

	# Add here commands to clean up after the build process.
	[ ! -f Makefile ] || EPICS_HOST_ARCH=$(EPICS_HOST_ARCH) $(MAKE) realclean
	rm -rf bin db dbd html include lib templates

	dh_clean 

doc_prefix=debian/epics-doc/usr/share/doc/epics-3.14.10
lib_prefix=debian/epics-libs/usr/lib
cat_prefix=debian/epics-catools/usr/bin
prl_prefix=debian/epics-perl/usr/lib/perl5
dev_prefix=debian/epics-dev/usr/epics/base
com_prefix=debian/epics-compat-dev/usr/epics/base

devbin=debian/epics-dev/usr/epics/base/bin/$(EPICS_HOST_ARCH)
devlib=debian/epics-dev/usr/epics/base/lib/$(EPICS_HOST_ARCH)

binprogs=caConnTest caDirServ caEventRate caget cainfo camonitor caput caRepeater casw softIoc iocLogServer
libs+= asHost asIoc ca cas Com
libs+= dbIoc dbStaticHost dbStaticIoc dbtoolsIoc
libs+= gdd miscIoc recIoc registryIoc
libs+= rsrvIoc softDevIoc testDevIoc

doln=rm $(dev_prefix)/$(1)/$(EPICS_HOST_ARCH)/$(2);\
 ln -s ../../../../$(1)/$(2) $(dev_prefix)/$(1)/$(EPICS_HOST_ARCH)/$(2);

install: install-indep install-arch
install-indep:
	dh_testdir
	dh_testroot
	dh_clean -k -i 
	dh_installdirs -i

	# epics-doc
	install -d $(doc_prefix)
	install README LICENSE $(doc_prefix)/
	install documentation/* $(doc_prefix)/
	cp -r html $(doc_prefix)/

	dh_install -i

install-arch:
	dh_testdir
	dh_testroot
	dh_clean -k -s 
	dh_installdirs -s

	# epics-libs
	install -d $(lib_prefix)
	install $(patsubst %,lib/$(EPICS_HOST_ARCH)/lib%.so,$(libs)) $(lib_prefix)/
	install $(patsubst %,lib/$(EPICS_HOST_ARCH)/lib%.so.3.14,$(libs)) $(lib_prefix)/

	# epics-catools
	install -d $(cat_prefix)
	install $(patsubst %,bin/$(EPICS_HOST_ARCH)/%,$(binprogs)) $(cat_prefix)/

	# epics-perl
	install -d $(prl_prefix)
	install -d $(prl_prefix)/EPICS
	install lib/perl/*.pm $(prl_prefix)/
	install lib/perl/EPICS/* $(prl_prefix)/EPICS/

	# epics-compat-dev
	install -d $(com_prefix)
	cp -r config $(com_prefix)/

	# epics-dev
	install -d $(dev_prefix)/bin
	install -d $(dev_prefix)/lib
	cp -r bin/$(EPICS_HOST_ARCH) $(dev_prefix)/bin/
	cp -r lib/$(EPICS_HOST_ARCH) $(dev_prefix)/lib/
	cp -r configure $(dev_prefix)/
	cp -r db $(dev_prefix)/
	cp -r dbd $(dev_prefix)/
	cp -r include $(dev_prefix)/
	cp -r startup $(dev_prefix)/
	cp -r templates $(dev_prefix)/

	$(foreach prog,$(binprogs),$(call doln,bin,$(prog)))
	$(foreach lib,$(libs),$(call doln,lib,$(lib:%=lib%.so)))
	$(foreach lib,$(libs),$(call doln,lib,$(lib:%=lib%.so.3.14)))

	dh_install -s
# Must not depend on anything. This is to be called by
# binary-arch/binary-indep
# in another 'make' thread.
binary-common:
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs
	dh_installexamples
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate	
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_python
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb
# Build architecture independant packages using the common target.
binary-indep: build-indep install-indep
	$(MAKE) -f debian/rules DH_OPTIONS=-i binary-common

# Build architecture dependant packages using the common target.
binary-arch: build-arch install-arch
	$(MAKE) -f debian/rules DH_OPTIONS=-s binary-common

binary: binary-arch binary-indep
.PHONY: build clean binary-indep binary-arch binary install install-indep install-arch 
