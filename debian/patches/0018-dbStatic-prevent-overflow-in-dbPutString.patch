From: Michael Davidsaver <mdavidsaver@gmail.com>
Date: Tue, 29 Mar 2016 17:36:39 +0900
Subject: dbStatic: prevent overflow in dbPutString()

Pull together patch and update of release notes.

1. The bounds check should be before the string
copy.  Also zero the last element out of
paranoia (should already be zero).

Fix lp:1563191

2. Release notes for lp:1563191
---
 documentation/RELEASE_NOTES.html | 7 +++++++
 src/ioc/dbStatic/dbStaticLib.c   | 6 ++++--
 2 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/documentation/RELEASE_NOTES.html b/documentation/RELEASE_NOTES.html
index aebf642..80a7577 100644
--- a/documentation/RELEASE_NOTES.html
+++ b/documentation/RELEASE_NOTES.html
@@ -12,6 +12,13 @@
 <h2 align="center">Changes between 3.15.2 and 3.15.3</h2>
 <!-- Insert new items immediately below here ... -->
 
+<h3>String field buffer overflows</h3>
+
+<p>Two buffer overflow bugs that can crash the IOC have been fixed, caused by
+initializing a string field with a value larger than the field size
+(<a href="https://bugs.launchpad.net/bugs/1563191">Launchpad bug
+#1563191</a>).</p>
+
 <h3>Fixed stack corruption bug in epicsThread C++ API</h3>
 
 <p>The C++ interface to the epicsThread API could corrupt the stack on thread
diff --git a/src/ioc/dbStatic/dbStaticLib.c b/src/ioc/dbStatic/dbStaticLib.c
index 0973ed2..545fb89 100644
--- a/src/ioc/dbStatic/dbStaticLib.c
+++ b/src/ioc/dbStatic/dbStaticLib.c
@@ -2051,7 +2051,10 @@ long dbPutString(DBENTRY *pdbentry,const char *pstring)
     switch (pflddes->field_type) {
     case DBF_STRING:
 	if(!pfield) return(S_dbLib_fieldNotFound);
-	strncpy((char *)pfield, pstring,pflddes->size);
+	if(strlen(pstring) >= (size_t)pflddes->size) return S_dbLib_strLen;
+	strncpy((char *)pfield, pstring, pflddes->size-1);
+        ((char *)pfield)[pflddes->size-1] = 0;
+
 	if((pflddes->special == SPC_CALC) && !stringHasMacro) {
 	    char  rpcl[RPCL_LEN];
 	    short err;
@@ -2062,7 +2065,6 @@ long dbPutString(DBENTRY *pdbentry,const char *pstring)
 			      calcErrorStr(err), pstring);
 	    }
 	}
-	if((short)strlen(pstring) >= pflddes->size) status = S_dbLib_strLen;
 	break;
 
     case DBF_CHAR:
