From: Michael Davidsaver <mdavidsaver@bnl.gov>
Date: Tue, 15 Apr 2014 11:49:54 -0400
Subject: dbStatic: Fixed crash loading record of unknown type

Fixed segfault when dbLoadRecords tried to load a record of a
type that was not defined in its DBD files.
---
 src/dbStatic/dbLexRoutines.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/src/dbStatic/dbLexRoutines.c b/src/dbStatic/dbLexRoutines.c
index 298d8b5..fb85808 100644
--- a/src/dbStatic/dbLexRoutines.c
+++ b/src/dbStatic/dbLexRoutines.c
@@ -113,8 +113,6 @@ static void yyerrorAbort(char *str)
 {
     yyerror(str);
     yyAbort = TRUE;
-    while (ellCount(&tempList))
-        popFirstTemp();
 }
 
 static void allocTemp(void *pvoid)
@@ -257,6 +255,11 @@ static long dbReadCOM(DBBASE **ppdbbase,const char *filename, FILE *fp,
     my_buffer_ptr = my_buffer;
     ellAdd(&inputFileList,&pinputFile->node);
     status = pvt_yy_parse();
+
+    if (yyAbort)
+        while (ellCount(&tempList))
+            popFirstTemp();
+
     dbFreePath(pdbbase);
     if(!status) { /*add RTYP and VERS as an attribute */
 	DBENTRY	dbEntry;
@@ -924,7 +927,7 @@ static void dbRecordHead(char *recordType, char *name, int visible)
     allocTemp(pdbentry);
     status = dbFindRecordType(pdbentry, recordType);
     if (status) {
-        epicsPrintf("Record \"%s\" is of unknown type \"%s\" - ",
+        epicsPrintf("Record \"%s\" is of unknown type \"%s\"\n",
                     name, recordType);
         yyerrorAbort(NULL);
         return;
@@ -933,8 +936,8 @@ static void dbRecordHead(char *recordType, char *name, int visible)
     status = dbCreateRecord(pdbentry,name);
     if (status==S_dbLib_recExists) {
         if (strcmp(recordType, dbGetRecordTypeName(pdbentry))!=0) {
-            epicsPrintf("Record \"%s\" already defined with different type "
-                "\"%s\"\n", name, dbGetRecordTypeName(pdbentry));
+            epicsPrintf("Record \"%s\" of type \"%s\" redefined with new type "
+                "\"%s\"\n", name, dbGetRecordTypeName(pdbentry), recordType);
             yyerror(NULL);
             duplicate = TRUE;
             return;
