From: Andrew Johnson <anj@aps.anl.gov>
Date: Mon, 29 Feb 2016 17:07:03 -0600
Subject: Fix for RTEMS NTP sync issue

Conflicts:
	documentation/RELEASE_NOTES.html
---
 documentation/RELEASE_NOTES.html    |  9 +++++++++
 src/libCom/osi/os/RTEMS/osdTime.cpp | 32 ++++++++++++++++++++++++++++++++
 2 files changed, 41 insertions(+)

diff --git a/documentation/RELEASE_NOTES.html b/documentation/RELEASE_NOTES.html
index d290376..e3e55c2 100644
--- a/documentation/RELEASE_NOTES.html
+++ b/documentation/RELEASE_NOTES.html
@@ -8,6 +8,7 @@
 
 <body lang="en">
 <h1 align="center">EPICS Base Release 3.15.3</h1>
+<h2 align="center">Changes following 3.15.3</h2>
 
 <h3>Moved <tt>mlockall()</tt> into its own epicsThread routine</h3>
 
@@ -19,6 +20,14 @@ moved to a separate routine <tt>epicsThreadRealtimeLock()</tt> which will be
 called by the IOC at iocInit (unless disabled by setting the global variable
 <tt>dbThreadRealtimeLock</tt> to zero).</p>
 
+<h3>RTEMS NTP Support Issue</h3>
+
+<p>On RTEMS the NTP Time Provider could in some circumstances get out of sync
+with the server because the osdNTPGet() code wasn't clearing its input socket
+before sending out a new request. This
+(<a href="https://bugs.launchpad.net/bugs/1549908">Launchpad bug 1549908</a>)
+has now been fixed.</p>
+
 <h2 align="center">Changes between 3.15.2 and 3.15.3</h2>
 <!-- Insert new items immediately below here ... -->
 
diff --git a/src/libCom/osi/os/RTEMS/osdTime.cpp b/src/libCom/osi/os/RTEMS/osdTime.cpp
index bca8221..08cb697 100644
--- a/src/libCom/osi/os/RTEMS/osdTime.cpp
+++ b/src/libCom/osi/os/RTEMS/osdTime.cpp
@@ -10,6 +10,9 @@
  *
  * Author: W. Eric Norum
  */
+#define __BSD_VISIBLE 1
+#include <sys/types.h>
+#include <sys/socket.h>
 
 #include <epicsStdio.h>
 #include <rtems.h>
@@ -40,8 +43,37 @@ void osdTimeRegister(void)
 
 int osdNTPGet(struct timespec *ts)
 {
+    static unsigned bequiet;
+    ssize_t ret;
+
     if (ntpSocket < 0)
         return -1;
+
+    /* rtems_bsdnet_get_ntp() will send an NTP request, then
+     * call recvfrom() exactly once to process the expected reply.
+     * Any leftovers in the socket buffer (ie. duplicates of
+     * previous replies) will cause problems.
+     * So flush out the socket buffer first.
+     */
+    do {
+        char junk[16];
+
+        ret = recvfrom(ntpSocket, junk, sizeof(junk), MSG_DONTWAIT, NULL, NULL);
+        if (ret == -1 && errno == EAGAIN) {
+            break;
+        }
+        else if (ret == -1) {
+            if (!bequiet) {
+                printf("osdNTPGet cleaner error: %s\n", strerror(errno));
+                bequiet = 1;
+            }
+            break;
+        }
+        else {
+            bequiet = 0;
+        }
+    } while (ret > 0);
+
     return rtems_bsdnet_get_ntp(ntpSocket, NULL, ts);
 }
 
